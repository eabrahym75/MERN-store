name: Terraform CI/CD

on:
  push:
    branches:
      - dev-branch
      

  pull_request:
    types: [closed]
    branches:
      - main
     
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Format Terraform code
        working-directory: ./
        run: terraform fmt
        
  plan:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev-branch'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform init
      working-directory: ./
      run: terraform init 
    - name: Terraform Plan
      working-directory: ./
      run: terraform plan -out=tf.plan

  apply:
    needs: lint
    if: github.ref == 'main' && github.event.pull_request.merged == true   
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Terraform init 
      working-directory: ./
      run: terraform init 
    - name: Terraform Apply
      working-directory: ./
      run: terraform apply -auto-approve tf.plan
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.2
    - name: Setting environment variables..
      run: |
        echo "AWS_SG_ID=module.aws_security_group.my_asg.id" >> $GITHUB_ENV
        
    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS__REGION: ${{ secrets.AWS_REGION }}
  