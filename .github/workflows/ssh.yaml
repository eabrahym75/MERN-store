Name: Server Deploy

on: 
  pull_request:
     types: [closed]
     branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}


jobs:
  deploy-server:
    runs-on: ubuntu-latest
    needs: Terraform CI/CD
    steps:
      - name: Checkout
        uses: actions/Checkout@v2
      - name: SSH to server for deployment
        uses: appleboy/ssh-action@v3
        with:
          host: ${{ env.AWS_SG_ID }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |-
            cd /home/ubuntu \
            git clone https://github.com/eabrahym75/MERN-store.git 
            cd MERN-store/
            cd backend/
            sudo npm install
            sudo npm install mongodb
            pm2 start 
            cd ..  \
            cd frontend/     
            sudo yarn install
            sudo pm2 start
            cd .. \                          
            cd socket/  
            sudo npm install
            sudo pm2 start
            cd ..  \
            cd backend/
            # Create a new Nginx site configuration file
            sudo tee /etc/nginx/sites-available/myapp.conf > /dev/null <<EOF
            server {
                listen 80 default_server;
                server_name _;  # Replace with your actual domain or IP address
                      
                location / {
                    proxy_pass http://localhost:3000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
              
                location / {
                    proxy_pass http://localhost:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOF
              
            # Remove the default Nginx site configuration file
            sudo rm -f /etc/nginx/sites-enabled/default
              
            # Create a symbolic link to enable the new site configuration
            sudo ln -s /etc/nginx/sites-available/myapp.conf /etc/nginx/sites-enabled/
              
            # Test the Nginx configuration for any syntax errors
            sudo nginx -t
              
            pm2 serve build/ 8000 -f --name "backend" --spa

            # Restart Nginx to apply the new configuration
            sudo systemctl restart nginx
              
              
              
            echo "******************************************"
            echo "Performed the following actions for backend"
            echo "******************************************"
            cd ..  \
            cd frontend/
            sudo rm -rf build
            sudo npm run build
            sudo pm2 serve build/ 3000 -f --name "backend" --spa
            sudo systemctl restart nginx
    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      if: always()


